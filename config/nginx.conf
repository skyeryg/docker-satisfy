pid /var/run/nginx.pid;
daemon off;
user nginx;
worker_processes auto;
pcre_jit on;
error_log /dev/stdout warn;
include /etc/nginx/modules/*.conf;
events {
  worker_connections 1024;
}
http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  server_tokens off;
  client_max_body_size 1m;
  keepalive_timeout 15;
  sendfile on;
  tcp_nodelay on;
  tcp_nopush on;
  gzip on;
  gzip_vary on;
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout main;
  upstream satisfy {
    keepalive 10;
    server 127.0.0.1:9000;
  }
  map $sent_http_content_type $expires {
    default                   off;
    ~image/                   1y;
    ~audio/                   1y;
    ~video/                   1y;
    text/css                  1y;
    text/javascript           1y;
    application/x-font-woff   1y;
    application/x-javascript  1y;
    application/javascript    1y;
    application/pdf           1y;
  }

  server {
    listen 80 default_server;
    server_name _;
    root /app/web;

    location ~ \.(css|js|ttf|woff|png|jpg|twig|map|txt|gz|tar|zip|ico|json)$ {
      try_files $uri =404;
    }

    # set cache-control header based on content_type map
    expires modified +1w;

    ## be aware of absolute_redirect
    # absolute_redirect off;

    location @satisfy {
      auth_basic 'Restricted';
      auth_basic_user_file /etc/nginx/.htpasswd;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_pass http://satisfy;
    }

    location = /healthz {
      try_files /nonexistent @satisfy;
    }

    location / {
      ## use relative redirect to support working in containers
      absolute_redirect off;
      try_files /nonexitent @satisfy;
    }
  }
}
